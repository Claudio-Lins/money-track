// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// generator erd {
//   provider = "prisma-erd-generator"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  entries       Entry[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Entry {
  id            Int       @id @default(autoincrement())
  amount        Float
  type          Type
  notes         String?
  description   String
  location      String?
  bankAccount   String
  recurring     Recurring
  paymentMethod String
  income        Boolean   @default(true)

  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  User          User?           @relation(fields: [userId], references: [id])
  userId        String?
  categories    Category[]      @relation("EntryCategory")
  EntryCategory EntryCategory[]
}

model Category {
  id      Int     @id @default(autoincrement())
  name    String
  icon    String  @default("/category/archive.svg")
  entries Entry[] @relation("EntryCategory")

  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  EntryCategory EntryCategory[]
}

model EntryCategory {
  id         Int      @id @default(autoincrement())
  entryId    Int
  categoryId Int
  entry      Entry    @relation(fields: [entryId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Fuel {
  id       Int      @id @default(autoincrement())
  location String
  amount   Float
  priceLt  Float
  liters   Float
  kms      Int
  type     FuelType
  note     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Type {
  INCOME
  EXPENSE
}

enum FuelType {
  GASOLEO
  GASOLINA
  GAS
}

enum Recurring {
  FIXED
  VARIABLE
}
